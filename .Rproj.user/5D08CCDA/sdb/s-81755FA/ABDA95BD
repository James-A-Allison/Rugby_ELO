{
    "collab_server" : "",
    "contents" : "library(openxlsx)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nmodern_teams <- getSheetNames(\"By_Team.xlsx\")\n# modern_teams <- modern_teams[!(modern_teams %in% home_nations)]\n\nfor (i in 1:length(modern_teams)) {\n  team <- modern_teams[i]\n  \n  Team <- readWorkbook(\"By_Team.xlsx\", team)\n  colnames(Team) <- Team[1,]\n  colnames(Team)[10] <- \"Match Date\" \n  Team <- Team[Team$Team == team,]\n  Team$Date <- as.Date(as.numeric(Team$`Match Date`), origin = \"1899-12-30\")\n  Team <- subset(Team, select = c(Team, Result, For, Aga, Diff, Opposition, Ground, Date))\n  if (i == 1) {all_teams <- Team} else {all_teams <- rbind(all_teams, Team)}\n  \n}\n\nall_teams <- all_teams[order(all_teams$Date),]\nall_teams$Opposition <- gsub(\"v \", \"\", all_teams$Opposition)\nall_teams <- all_teams[all_teams$Opposition %in% modern_teams,]\nall_teams <- all_teams[!duplicated(all_teams[c(\"Date\", \"Ground\")]),]\nall_teams <- all_teams[!is.na(all_teams$Date),]\nall_teams$Diff <- gsub(\"G\", \"\", all_teams$Diff)\nall_teams$Diff <- as.numeric(all_teams$Diff) \n\n# ELO table setup ---------------------------------------------------------\n\ninital_date <-  as.Date(paste0(\"1\", \"Jan\", \"1880\"), \"%d%b%Y\")\ninital_ELO <- 1500\n\nelo_table <- cbind(inital_date, modern_teams, inital_ELO)\nelo_table <- data.frame(elo_table, stringsAsFactors = F)\nelo_table$inital_date <- inital_date\nelo_table$inital_ELO <- as.numeric(elo_table$inital_ELO)\nelo_table <- rename(elo_table, Date=inital_date)\nelo_table <- rename(elo_table, Team=modern_teams)\nelo_table <- rename(elo_table, ELO=inital_ELO)\nelo_table$Expected_win <- \"\"\nelo_table$Result <- \"\"\nelo_table$Opposition <- \"\"\n# elo_table$Competition <- \"\"\n\n# ELO function ------------------------------------------------------------\n\nk <- 25\n\n# run_elo <- function() {\n\n\nfor (i in 1:length(all_teams[,1])) {\n  \n  current_match <- all_teams[i,]\n  \n  elo_home <- elo_table[elo_table$Team == current_match$Team,3]\n  elo_away <- elo_table[elo_table$Team == current_match$Opposition,3]\n  \n  elo_home <- elo_home[length(elo_home)]\n  elo_away <- elo_away[length(elo_away)]\n  \n  home_q <- 10^(elo_home/400)\n  away_q <- 10^(elo_away/400)\n  \n  total_q <- home_q + away_q\n  \n  expected_score_home <- home_q/total_q\n  expected_score_away <- away_q/total_q\n  \n  # expected_score_home <- 1/(1+10^((elo_away-elo_home)/400))\n  # expected_score_away <- 1/(1+10^((elo_home-elo_away)/400))\n  \n  if (current_match$Diff > 0) {\n    actual_net_home_score <- 1\n    actual_net_away_score <- 0\n    winning_team_elo <- elo_home\n    losing_team_elo <- elo_away\n    margin_of_victory <- log(abs(current_match$Diff+1))*(2.2/((winning_team_elo-losing_team_elo)*.001+2.2))\n  } else if (current_match$Diff < 0) {\n    actual_net_home_score <- 0\n    actual_net_away_score <- 1\n    winning_team_elo <- elo_away\n    losing_team_elo <- elo_home\n    margin_of_victory <- log(abs(current_match$Diff+1))*(2.2/((winning_team_elo-losing_team_elo)*.001+2.2))\n   } else {\n    actual_net_home_score <- 0.5\n    actual_net_away_score <- 0.5\n    winning_team_elo <- 0\n    losing_team_elo <- 0\n    margin_of_victory <- 1\n   }\n  \n  if (is.infinite(margin_of_victory)) {margin_of_victory <- 1}\n  \n  new_elo_home <- elo_home + k*(actual_net_home_score-expected_score_home)*margin_of_victory\n  new_elo_away <- elo_away + k*(actual_net_away_score-expected_score_away)*margin_of_victory\n  \n  # new_elo_home <- elo_home + k*(actual_net_home_score-expected_score_home)\n  # new_elo_away <- elo_away + k*(actual_net_away_score-expected_score_away)\n  \n  new_elo_row <- data.frame(Date=as.Date(current_match$Date), \n                            Team=as.character(current_match$Team), \n                            ELO=as.numeric(new_elo_home),\n                            Expected_win=as.numeric(expected_score_home),\n                            Result=as.numeric(actual_net_home_score),\n                            Opposition=as.character(current_match$Opposition))\n  \n  elo_table <- rbind(elo_table, new_elo_row)\n  \n  new_elo_row <- data.frame(Date=as.Date(current_match$Date), \n                            Team=as.character(current_match$Opposition), \n                            ELO=as.numeric(new_elo_away),\n                            Expected_win=as.numeric(expected_score_away),\n                            Result=as.numeric(actual_net_away_score),\n                            Opposition=as.character(current_match$Team))\n  \n  elo_table <- rbind(elo_table, new_elo_row)\n}\n# }\nplot_table <- elo_table\nplot_table$Team <- as.factor(plot_table$Team)\n\n# qplot(Date, ELO, data = plot_table, color = Team, geom = \"line\")\n\nqplot(Date, ELO, data = plot_table[plot_table$Date > \"1980-01-01\",], color = Team, geom = \"step\")\n\nnew_six_nations <- plot_table[(plot_table$Team == \"New Zealand\" &# | plot_table$Team == \"Wales\" |\n                              # plot_table$Team == \"Ireland\" | plot_table$Team == \"France\" |\n                              # plot_table$Team == \"Scotland\" | plot_table$Team == \"Italy\") #&\n                               plot_table$Date > \"1980-01-01\"),]\n\nqplot(Date, ELO, data = new_six_nations, color = Team, geom = \"step\")",
    "created" : 1499704582402.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3859541469",
    "id" : "ABDA95BD",
    "lastKnownWriteTime" : 1499372059,
    "last_content_update" : 1499372059,
    "path" : "~/Documents/Rugby_ELO/rugby_elo_v2_missing_pre_1900.R",
    "project_path" : "rugby_elo_v2_missing_pre_1900.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}